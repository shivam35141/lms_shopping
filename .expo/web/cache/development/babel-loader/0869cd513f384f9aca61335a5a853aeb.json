{"ast":null,"code":"import jwt_decode from \"jwt-decode\";\nimport AsyncStorage from \"@react-native-community/async-storage\";\nimport Toast from \"react-native-toast-message\";\nimport baseURL from \"../../assets/common/baseUrl\";\nexport var SET_CURRENT_USER = \"SET_CURRENT_USER\";\nexport var loginUser = function loginUser(user, dispatch) {\n  fetch(baseURL + \"users/login\", {\n    method: \"POST\",\n    body: JSON.stringify(user),\n    headers: {\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\"\n    }\n  }).then(function (res) {\n    return res.json();\n  }).then(function (data) {\n    if (data) {\n      var token = data.token;\n      AsyncStorage.setItem(\"jwt\", token);\n      var decoded = jwt_decode(token);\n      dispatch(setCurrentUser(decoded, user));\n    } else {\n      logoutUser(dispatch);\n    }\n  }).catch(function (err) {\n    Toast.show({\n      topOffset: 60,\n      type: \"error\",\n      text1: \"Please provide correct credentials\",\n      text2: \"\"\n    });\n    logoutUser(dispatch);\n  });\n};\nexport var getUserProfile = function getUserProfile(id) {\n  fetch(baseURL + \"users/\" + id, {\n    method: \"GET\",\n    body: JSON.stringify(user),\n    headers: {\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\"\n    }\n  }).then(function (res) {\n    return res.json();\n  }).then(function (data) {\n    return console.log(data);\n  });\n};\nexport var logoutUser = function logoutUser(dispatch) {\n  AsyncStorage.removeItem(\"jwt\");\n  dispatch(setCurrentUser({}));\n};\nexport var setCurrentUser = function setCurrentUser(decoded, user) {\n  return {\n    type: SET_CURRENT_USER,\n    payload: decoded,\n    userProfile: user\n  };\n};","map":{"version":3,"sources":["E:/leimakhong_app/mern-stack-ecommerce-master/easy-shop/Context/actions/Auth.actions.js"],"names":["jwt_decode","AsyncStorage","Toast","baseURL","SET_CURRENT_USER","loginUser","user","dispatch","fetch","method","body","JSON","stringify","headers","Accept","then","res","json","data","token","setItem","decoded","setCurrentUser","logoutUser","catch","err","show","topOffset","type","text1","text2","getUserProfile","id","console","log","removeItem","payload","userProfile"],"mappings":"AAAA,OAAOA,UAAP,MAAuB,YAAvB;AACA,OAAOC,YAAP,MAAyB,uCAAzB;AACA,OAAOC,KAAP,MAAkB,4BAAlB;AACA,OAAOC,OAAP;AAEA,OAAO,IAAMC,gBAAgB,GAAG,kBAAzB;AAEP,OAAO,IAAMC,SAAS,GAAG,SAAZA,SAAY,CAACC,IAAD,EAAOC,QAAP,EAAoB;AACzCC,EAAAA,KAAK,CAAIL,OAAJ,kBAA0B;AAC3BM,IAAAA,MAAM,EAAE,MADmB;AAE3BC,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeN,IAAf,CAFqB;AAG3BO,IAAAA,OAAO,EAAE;AACLC,MAAAA,MAAM,EAAE,kBADH;AAEL,sBAAgB;AAFX;AAHkB,GAA1B,CAAL,CAQCC,IARD,CAQM,UAACC,GAAD;AAAA,WAASA,GAAG,CAACC,IAAJ,EAAT;AAAA,GARN,EASCF,IATD,CASM,UAACG,IAAD,EAAU;AACZ,QAAIA,IAAJ,EAAU;AACN,UAAMC,KAAK,GAAGD,IAAI,CAACC,KAAnB;AACAlB,MAAAA,YAAY,CAACmB,OAAb,CAAqB,KAArB,EAA4BD,KAA5B;AACA,UAAME,OAAO,GAAGrB,UAAU,CAACmB,KAAD,CAA1B;AACAZ,MAAAA,QAAQ,CAACe,cAAc,CAACD,OAAD,EAAUf,IAAV,CAAf,CAAR;AACH,KALD,MAKO;AACJiB,MAAAA,UAAU,CAAChB,QAAD,CAAV;AACF;AACJ,GAlBD,EAmBCiB,KAnBD,CAmBO,UAACC,GAAD,EAAS;AACZvB,IAAAA,KAAK,CAACwB,IAAN,CAAW;AACPC,MAAAA,SAAS,EAAE,EADJ;AAEPC,MAAAA,IAAI,EAAE,OAFC;AAGPC,MAAAA,KAAK,EAAE,oCAHA;AAIPC,MAAAA,KAAK,EAAE;AAJA,KAAX;AAMAP,IAAAA,UAAU,CAAChB,QAAD,CAAV;AACH,GA3BD;AA4BH,CA7BM;AA+BP,OAAO,IAAMwB,cAAc,GAAG,SAAjBA,cAAiB,CAACC,EAAD,EAAQ;AAClCxB,EAAAA,KAAK,CAAIL,OAAJ,cAAoB6B,EAApB,EAA0B;AAC3BvB,IAAAA,MAAM,EAAE,KADmB;AAE3BC,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeN,IAAf,CAFqB;AAG3BO,IAAAA,OAAO,EAAE;AACLC,MAAAA,MAAM,EAAE,kBADH;AAEL,sBAAgB;AAFX;AAHkB,GAA1B,CAAL,CAQCC,IARD,CAQM,UAACC,GAAD;AAAA,WAASA,GAAG,CAACC,IAAJ,EAAT;AAAA,GARN,EASCF,IATD,CASM,UAACG,IAAD;AAAA,WAAUe,OAAO,CAACC,GAAR,CAAYhB,IAAZ,CAAV;AAAA,GATN;AAUH,CAXM;AAaP,OAAO,IAAMK,UAAU,GAAG,SAAbA,UAAa,CAAChB,QAAD,EAAc;AACpCN,EAAAA,YAAY,CAACkC,UAAb,CAAwB,KAAxB;AACA5B,EAAAA,QAAQ,CAACe,cAAc,CAAC,EAAD,CAAf,CAAR;AACH,CAHM;AAKP,OAAO,IAAMA,cAAc,GAAG,SAAjBA,cAAiB,CAACD,OAAD,EAAUf,IAAV,EAAmB;AAC7C,SAAO;AACHsB,IAAAA,IAAI,EAAExB,gBADH;AAEHgC,IAAAA,OAAO,EAAEf,OAFN;AAGHgB,IAAAA,WAAW,EAAE/B;AAHV,GAAP;AAKH,CANM","sourcesContent":["import jwt_decode from \"jwt-decode\"\nimport AsyncStorage from \"@react-native-community/async-storage\"\nimport Toast from \"react-native-toast-message\"\nimport baseURL from \"../../assets/common/baseUrl\"\n\nexport const SET_CURRENT_USER = \"SET_CURRENT_USER\";\n\nexport const loginUser = (user, dispatch) => {\n    fetch(`${baseURL}users/login`, {\n        method: \"POST\",\n        body: JSON.stringify(user),\n        headers: {\n            Accept: \"application/json\",\n            \"Content-Type\": \"application/json\",\n        },\n    })\n    .then((res) => res.json())\n    .then((data) => {\n        if (data) {\n            const token = data.token;\n            AsyncStorage.setItem(\"jwt\", token)\n            const decoded = jwt_decode(token)\n            dispatch(setCurrentUser(decoded, user))\n        } else {\n           logoutUser(dispatch)\n        }\n    })\n    .catch((err) => {\n        Toast.show({\n            topOffset: 60,\n            type: \"error\",\n            text1: \"Please provide correct credentials\",\n            text2: \"\"\n        });\n        logoutUser(dispatch)\n    });\n};\n\nexport const getUserProfile = (id) => {\n    fetch(`${baseURL}users/${id}`, {\n        method: \"GET\",\n        body: JSON.stringify(user),\n        headers: {\n            Accept: \"application/json\",\n            \"Content-Type\": \"application/json\"\n        },\n    })\n    .then((res) => res.json())\n    .then((data) => console.log(data));\n}\n\nexport const logoutUser = (dispatch) => {\n    AsyncStorage.removeItem(\"jwt\");\n    dispatch(setCurrentUser({}))\n}\n\nexport const setCurrentUser = (decoded, user) => {\n    return {\n        type: SET_CURRENT_USER,\n        payload: decoded,\n        userProfile: user\n    }\n}"]},"metadata":{},"sourceType":"module"}