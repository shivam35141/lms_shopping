{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"E:\\\\leimakhong_app\\\\mern-stack-ecommerce-master\\\\easy-shop\\\\Screens\\\\Products\\\\ProductCard.js\";\n\nimport React from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Toast from 'react-native-toast-message';\nimport EasyButton from \"../../Shared/StyledComponents/EasyButton\";\nimport { connect } from 'react-redux';\nimport * as actions from \"../../Redux/Actions/cartActions\";\n\nvar _Dimensions$get = Dimensions.get(\"window\"),\n    width = _Dimensions$get.width;\n\nvar ProductCard = function ProductCard(props) {\n  var name = props.name,\n      price = props.price,\n      image = props.image,\n      countInStock = props.countInStock;\n  return React.createElement(View, {\n    style: styles.container,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 9\n    }\n  }, React.createElement(Image, {\n    style: styles.image,\n    resizeMode: \"contain\",\n    source: {\n      uri: image ? image : 'https://cdn.pixabay.com/photo/2012/04/01/17/29/box-23649_960_720.png'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }\n  }), React.createElement(View, {\n    style: styles.card,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }\n  }), React.createElement(Text, {\n    style: styles.title,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }\n  }, name.length > 15 ? name.substring(0, 15 - 3) + '...' : name), React.createElement(Text, {\n    style: styles.price,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }\n  }, \"$\", price), countInStock > 0 ? React.createElement(View, {\n    style: {\n      marginBottom: 60\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 17\n    }\n  }, React.createElement(EasyButton, {\n    primary: true,\n    medium: true,\n    onPress: function onPress() {\n      props.addItemToCart(props.id), Toast.show({\n        topOffset: 60,\n        type: \"success\",\n        text1: name + \" added to Cart\",\n        text2: \"Go to your cart to complete order\"\n      });\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 21\n    }\n  }, React.createElement(Text, {\n    style: {\n      color: \"white\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 25\n    }\n  }, \"Add\"))) : React.createElement(Text, {\n    style: {\n      marginTop: 20\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 17\n    }\n  }, \"Currently Unavailable\"));\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    addItemToCart: function addItemToCart(product) {\n      return dispatch(actions.addToCart({\n        quantity: 1,\n        product: product\n      }));\n    }\n  };\n};\n\nvar styles = StyleSheet.create({\n  container: {\n    width: width / 2 - 20,\n    height: width / 1.7,\n    padding: 10,\n    borderRadius: 10,\n    marginTop: 55,\n    marginBottom: 5,\n    marginLeft: 10,\n    alignItems: 'center',\n    elevation: 8,\n    backgroundColor: 'white'\n  },\n  image: {\n    width: width / 2 - 20 - 10,\n    height: width / 2 - 20 - 30,\n    backgroundColor: 'transparent',\n    position: 'absolute',\n    top: -45\n  },\n  card: {\n    marginBottom: 10,\n    height: width / 2 - 20 - 90,\n    backgroundColor: 'transparent',\n    width: width / 2 - 20 - 10\n  },\n  title: {\n    fontWeight: \"bold\",\n    fontSize: 14,\n    textAlign: 'center'\n  },\n  price: {\n    fontSize: 20,\n    color: 'orange',\n    marginTop: 10\n  }\n});\nexport default connect(null, mapDispatchToProps)(ProductCard);","map":{"version":3,"sources":["E:/leimakhong_app/mern-stack-ecommerce-master/easy-shop/Screens/Products/ProductCard.js"],"names":["React","Toast","EasyButton","connect","actions","Dimensions","get","width","ProductCard","props","name","price","image","countInStock","styles","container","uri","card","title","length","substring","marginBottom","addItemToCart","id","show","topOffset","type","text1","text2","color","marginTop","mapDispatchToProps","dispatch","product","addToCart","quantity","StyleSheet","create","height","padding","borderRadius","marginLeft","alignItems","elevation","backgroundColor","position","top","fontWeight","fontSize","textAlign"],"mappings":"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","sourcesContent":["import React from 'react'\nimport {\n    StyleSheet,\n    View,\n    Dimensions,\n    Image,\n    Text,\n    Button\n} from 'react-native'\nimport Toast from 'react-native-toast-message'\nimport EasyButton from \"../../Shared/StyledComponents/EasyButton\"\nimport { connect } from 'react-redux'\nimport * as actions from '../../Redux/Actions/cartActions';\n\nvar { width } = Dimensions.get(\"window\");\n\nconst ProductCard = (props) => {\n    const { name, price, image, countInStock } = props;\n\n    return (\n        <View style={styles.container}>\n            <Image \n            style={styles.image}\n            resizeMode=\"contain\"\n            source={{uri: image ? \n                image : 'https://cdn.pixabay.com/photo/2012/04/01/17/29/box-23649_960_720.png'}}\n            />\n            <View style={styles.card}/>\n            <Text style={styles.title}>\n                {name.length > 15 ? name.substring(0, 15 - 3)\n                    + '...' : name\n                }\n            </Text>\n            <Text style={styles.price}>${price}</Text>\n\n            { countInStock > 0 ? (\n                <View style={{ marginBottom: 60 }}>\n                    <EasyButton \n                    primary\n                    medium\n                    onPress={() => {\n                        props.addItemToCart(props.id),\n                        Toast.show({\n                            topOffset: 60,\n                            type: \"success\",\n                            text1: `${name} added to Cart`,\n                            text2: \"Go to your cart to complete order\"\n                        })\n                    }}\n                    >\n                        <Text style={{ color: \"white\"}}>Add</Text>\n                    </EasyButton>\n                </View>\n            ) : <Text style={{ marginTop: 20 }}>Currently Unavailable</Text>}\n        </View>\n    )\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        addItemToCart: (product) => \n            dispatch(actions.addToCart({quantity: 1, product}))\n    }\n}\n\nconst styles = StyleSheet.create({\n    container: {\n        width: width / 2 - 20,\n        height: width / 1.7,\n        padding: 10,\n        borderRadius: 10,\n        marginTop: 55,\n        marginBottom: 5,\n        marginLeft: 10,\n        alignItems: 'center',\n        elevation: 8,\n        backgroundColor: 'white'\n    },\n    image: {\n        width: width / 2 - 20 - 10,\n        height: width / 2 - 20 - 30,\n        backgroundColor: 'transparent',\n        position: 'absolute',\n        top: -45\n    },\n    card: {\n        marginBottom: 10,\n        height: width / 2 - 20 - 90,\n        backgroundColor: 'transparent',\n        width: width / 2 - 20 - 10\n    },\n    title: {\n        fontWeight: \"bold\",\n        fontSize: 14,\n        textAlign: 'center'\n    },\n    price: {\n        fontSize: 20,\n        color: 'orange',\n        marginTop: 10\n    }\n})\n\nexport default connect(null, mapDispatchToProps)(ProductCard);"]},"metadata":{},"sourceType":"module"}