{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"E:\\\\leimakhong_app\\\\mern-stack-ecommerce-master\\\\easy-shop\\\\Screens\\\\Products\\\\SingleProduct.js\";\n\nimport React, { useState, useEffect } from 'react';\nimport Image from \"react-native-web/dist/exports/Image\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport { Left, Right, Container, H1 } from 'native-base';\nimport Toast from 'react-native-toast-message';\nimport EasyButton from \"../../Shared/StyledComponents/EasyButton\";\nimport TrafficLight from \"../../Shared/StyledComponents/TrafficLight\";\nimport { connect } from 'react-redux';\nimport * as actions from \"../../Redux/Actions/cartActions\";\n\nvar SingleProduct = function SingleProduct(props) {\n  var _useState = useState(props.route.params.item),\n      _useState2 = _slicedToArray(_useState, 2),\n      item = _useState2[0],\n      setItem = _useState2[1];\n\n  var _useState3 = useState(null),\n      _useState4 = _slicedToArray(_useState3, 2),\n      availability = _useState4[0],\n      setAvailability = _useState4[1];\n\n  var _useState5 = useState(\"\"),\n      _useState6 = _slicedToArray(_useState5, 2),\n      availabilityText = _useState6[0],\n      setAvailabilityText = _useState6[1];\n\n  useEffect(function () {\n    if (props.route.params.item.countInStock == 0) {\n      setAvailability(React.createElement(TrafficLight, {\n        unavailable: true,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 29\n        }\n      }));\n      setAvailabilityText(\"Unvailable\");\n    } else if (props.route.params.item.countInStock <= 5) {\n      setAvailability(React.createElement(TrafficLight, {\n        limited: true,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 29\n        }\n      }));\n      setAvailabilityText(\"Limited Stock\");\n    } else {\n      setAvailability(React.createElement(TrafficLight, {\n        available: true,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 29\n        }\n      }));\n      setAvailabilityText(\"Available\");\n    }\n\n    return function () {\n      setAvailability(null);\n      setAvailabilityText(\"\");\n    };\n  }, []);\n  return React.createElement(Container, {\n    style: styles.container,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }\n  }, React.createElement(ScrollView, {\n    style: {\n      marginBottom: 80,\n      padding: 5\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }\n  }, React.createElement(View, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 17\n    }\n  }, React.createElement(Image, {\n    source: {\n      uri: item.image ? item.image : 'https://cdn.pixabay.com/photo/2012/04/01/17/29/box-23649_960_720.png'\n    },\n    resizeMode: \"contain\",\n    style: styles.image,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 21\n    }\n  })), React.createElement(View, {\n    style: styles.contentContainer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 17\n    }\n  }, React.createElement(H1, {\n    style: styles.contentHeader,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 21\n    }\n  }, item.name), React.createElement(Text, {\n    style: styles.contentText,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 21\n    }\n  }, item.brand)), React.createElement(View, {\n    style: styles.availabilityContainer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 17\n    }\n  }, React.createElement(View, {\n    style: styles.availability,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 21\n    }\n  }, React.createElement(Text, {\n    style: {\n      marginRight: 10\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 25\n    }\n  }, \"Availability: \", availabilityText), availability), React.createElement(Text, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 21\n    }\n  }, item.description))), React.createElement(View, {\n    style: styles.bottomContainer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }\n  }, React.createElement(Left, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 17\n    }\n  }, React.createElement(Text, {\n    style: styles.price,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 21\n    }\n  }, \"$ \", item.price)), React.createElement(Right, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 17\n    }\n  }, React.createElement(EasyButton, {\n    primary: true,\n    medium: true,\n    onPress: function onPress() {\n      props.addItemToCart(item.id), Toast.show({\n        topOffset: 60,\n        type: \"success\",\n        text1: item.name + \" added to Cart\",\n        text2: \"Go to your cart to complete order\"\n      });\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 20\n    }\n  }, React.createElement(Text, {\n    style: {\n      color: 'white'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 24\n    }\n  }, \"Add\")))));\n};\n\nvar mapToDispatchToProps = function mapToDispatchToProps(dispatch) {\n  return {\n    addItemToCart: function addItemToCart(product) {\n      return dispatch(actions.addToCart({\n        quantity: 1,\n        product: product\n      }));\n    }\n  };\n};\n\nvar styles = StyleSheet.create({\n  container: {\n    position: 'relative',\n    height: '100%'\n  },\n  imageContainer: {\n    backgroundColor: 'white',\n    padding: 0,\n    margin: 0\n  },\n  image: {\n    width: '100%',\n    height: 250\n  },\n  contentContainer: {\n    marginTop: 20,\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  contentHeader: {\n    fontWeight: 'bold',\n    marginBottom: 20\n  },\n  contentText: {\n    fontSize: 18,\n    fontWeight: 'bold',\n    marginBottom: 20\n  },\n  bottomContainer: {\n    flexDirection: 'row',\n    position: 'absolute',\n    bottom: 0,\n    left: 0,\n    backgroundColor: 'white'\n  },\n  price: {\n    fontSize: 24,\n    margin: 20,\n    color: 'red'\n  },\n  availabilityContainer: {\n    marginBottom: 20,\n    alignItems: \"center\"\n  },\n  availability: {\n    flexDirection: 'row',\n    marginBottom: 10\n  }\n});\nexport default connect(null, mapToDispatchToProps)(SingleProduct);","map":{"version":3,"sources":["E:/leimakhong_app/mern-stack-ecommerce-master/easy-shop/Screens/Products/SingleProduct.js"],"names":["React","useState","useEffect","Left","Right","Container","H1","Toast","EasyButton","TrafficLight","connect","actions","SingleProduct","props","route","params","item","setItem","availability","setAvailability","availabilityText","setAvailabilityText","countInStock","styles","container","marginBottom","padding","uri","image","contentContainer","contentHeader","name","contentText","brand","availabilityContainer","marginRight","description","bottomContainer","price","addItemToCart","id","show","topOffset","type","text1","text2","color","mapToDispatchToProps","dispatch","product","addToCart","quantity","StyleSheet","create","position","height","imageContainer","backgroundColor","margin","width","marginTop","justifyContent","alignItems","fontWeight","fontSize","flexDirection","bottom","left"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport { Image, View, StyleSheet, Text, ScrollView, Button } from 'react-native';\nimport { Left, Right, Container, H1 } from 'native-base';\nimport Toast from 'react-native-toast-message';\nimport EasyButton from '../../Shared/StyledComponents/EasyButton'\nimport TrafficLight from '../../Shared/StyledComponents/TrafficLight'\n\nimport { connect } from 'react-redux';\nimport * as actions from '../../Redux/Actions/cartActions';\n\nconst SingleProduct = (props) => {\n\n    const [item, setItem] = useState(props.route.params.item);\n    const [availability, setAvailability] = useState(null);\n    const [availabilityText, setAvailabilityText] = useState(\"\")\n\n    useEffect(() => {\n        if (props.route.params.item.countInStock == 0) {\n            setAvailability(<TrafficLight unavailable></TrafficLight>);\n            setAvailabilityText(\"Unvailable\")\n        } else if (props.route.params.item.countInStock <= 5) {\n            setAvailability(<TrafficLight limited></TrafficLight>);\n            setAvailabilityText(\"Limited Stock\")\n        } else {\n            setAvailability(<TrafficLight available></TrafficLight>);\n            setAvailabilityText(\"Available\")\n        }\n\n        return () => {\n            setAvailability(null);\n            setAvailabilityText(\"\");\n        }\n    }, [])\n\n    return (\n        <Container style={styles.container}>\n            <ScrollView style={{ marginBottom: 80, padding: 5 }}>\n                <View>\n                    <Image \n                        source={{\n                            uri: item.image ? item.image \n                            : 'https://cdn.pixabay.com/photo/2012/04/01/17/29/box-23649_960_720.png'\n                        }}\n                        resizeMode=\"contain\"\n                        style={styles.image}\n                    />\n                </View>\n                <View style={styles.contentContainer}>\n                    <H1 style={styles.contentHeader}>{item.name}</H1>\n                    <Text style={styles.contentText}>{item.brand}</Text>\n                </View>\n                <View style={styles.availabilityContainer}>\n                    <View style={styles.availability}>\n                        <Text style={{ marginRight: 10 }}>\n                            Availability: {availabilityText}\n                        </Text>\n                        {availability}\n                    </View>\n                    <Text>{item.description}</Text>\n                </View>\n            </ScrollView>\n\n            <View style={styles.bottomContainer}>\n                <Left>\n                    <Text style={styles.price}>$ {item.price}</Text>\n                </Left>\n                <Right>\n                   <EasyButton \n                   primary\n                   medium\n                   onPress={() => {props.addItemToCart(item.id),\n                        Toast.show({\n                            topOffset: 60,\n                            type: \"success\",\n                            text1: `${item.name} added to Cart`,\n                            text2: \"Go to your cart to complete order\"\n                        })\n                }}\n                   >\n                       <Text style={{ color: 'white'}}>Add</Text>\n                   </EasyButton>\n                </Right>\n            </View>\n        </Container>\n    )\n\n}\n\nconst mapToDispatchToProps = (dispatch) => {\n    return {\n        addItemToCart: (product) => \n            dispatch(actions.addToCart({quantity: 1, product}))\n    }\n}\n\nconst styles = StyleSheet.create({\n    container: {\n        position: 'relative',\n        height: '100%'\n    },\n    imageContainer: {\n        backgroundColor: 'white',\n        padding: 0,\n        margin: 0\n    },\n    image: {\n        width: '100%',\n        height: 250\n    },\n    contentContainer: {\n        marginTop: 20,\n        justifyContent: 'center',\n        alignItems: 'center'\n    },\n    contentHeader: {\n        fontWeight: 'bold',\n        marginBottom: 20\n    },\n    contentText: {\n        fontSize: 18,\n        fontWeight: 'bold',\n        marginBottom: 20\n    },\n    bottomContainer: {\n        flexDirection: 'row',\n        position: 'absolute',\n        bottom: 0,\n        left: 0,\n        backgroundColor: 'white'\n    },\n    price: {\n        fontSize: 24,\n        margin: 20,\n        color: 'red'\n    },\n    availabilityContainer: {\n        marginBottom: 20,\n        alignItems: \"center\"\n    },\n    availability: {\n        flexDirection: 'row',\n        marginBottom: 10,\n    }\n})\n\nexport default connect(null, mapToDispatchToProps)(SingleProduct);"]},"metadata":{},"sourceType":"module"}